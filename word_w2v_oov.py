# -*- coding: utf-8 -*-
import re
# from pyltp import Segmentor
import jieba.posseg as pseg
import jieba
import os
import sys
import json
import math
# import kenlm
import nltk
from collections import Counter
import multiprocessing
import gensim
from gensim.models import word2vec
from gensim.models import Word2Vec
from gensim.models.word2vec import PathLineSentences
#  word
model = word2vec.Word2Vec.load("./word2vecModel/word_embedding.model")

fin_word_count = open('./word_count/TNewsSegafter1_word_count.json', encoding='utf-8')
fout = open('./word_count/less_freq', encoding='utf-8', mode='w+')
print("word count dict load")
word_count_dict = json.load(fin_word_count)
less_seq_list = []
sum = [0.0 for i in range(200)]
average = []
count = 0
for k, v in word_count_dict.items():
    if v == 5 and k in model.wv.vocab:
        count += 1
        # print(str(k) + "::" + str(v))
        less_seq_list.append(model[k])
        for i, num in enumerate(model[k]):
            sum[i] += num
        fout.write(str(k) + '\n')
        if count >= 100:
            break
print("print sum")
print(sum)
fin_word_count.close()
fout.close()
print('calc average')
for item in sum:
    average.append(float(item) / count)
print('average result')
print(average)
# w2v_oov = [0.029771322715096176, -0.1797641052212566, -0.15540868396521546, 0.016750613988842814, 0.13139006277080625,
#            0.18927307306905278, -0.08124262181110681, -0.11126805551582947, -0.0699414604960475, -0.03340416052145884,
#            0.09550570552702993, 0.22970463457284496, 0.027260677864833268, -0.04238693268503994, -0.06484487481415271,
#            -0.1105280127376318, 0.23480660470901057, 0.13355112165212632, -0.05781659089261666, 0.061979648979613555,
#            0.11935871035209857, 0.13244090287014842, 0.05829930666368455, -0.23015625100815668, -0.10686272406484931,
#            -0.08166696057451191, -0.1000116947304923, -0.15575152582954616, 0.2990026765363291, 0.13900414601899683,
#            0.07931797427823767, -0.118478541104123, -0.05718246125383303, -0.1984299713576911, -0.026754255649866537,
#            -0.06595066790934652, 0.0701980098709464, -0.02021617696620524, -0.02016193582327105, -0.059079236197285355,
#            0.0716109878453426, -0.08493055985192768, -0.1679619058163371, 0.21693602593615652, 0.006383166288433131,
#            -0.1926433660648763, -0.07516566651727771, 0.026055407213862056, -0.022615917877992615, -0.06840781694743782,
#            0.15320199897629208, 0.23695636728429237, 0.04463470644375775, -0.08514232685847674, 0.2198224404733628,
#            0.026490205188747496, 0.1871540654078126, -0.12004976535798051, 0.19885064010974018, 0.06408853961387649,
#            -0.16148298711050302, 0.017060692647937685, 0.01778742492897436, -0.15750804571434857, -0.006176323270192369,
#            -0.18479602967971004, 0.0423849461642385, -0.05876891918596812, -0.2518880943860859, 0.02102667710161768,
#            0.11943946411483922, -0.22649141522211722, -0.007660277767572552, 0.03801495554522262, -0.06877650342823471,
#            0.10171551928648113, -0.2247908383863978, -0.016697161078918724, -0.06680803403316532, -0.1342469186190283,
#            0.09360605071065947, -0.04069377420222736, 0.029106231809128077, -0.20650600037071853, -0.09095133155118675,
#            0.08879572547972202, -0.14368580755311997, -0.1794797536265105, 0.032536996271810496, -0.2160530481953174,
#            0.0483464745618403, -0.16178062450606376, -0.037870418124366555, 0.05067566099343821, -0.09106704042933415,
#            -0.02212720193900168, 0.012446866587270051, 0.04129601973108947, -0.014168246542540145,
#            -0.013927340838126839, 0.001756250481121242, 0.15318492190213873, -0.1464926715742331, 0.08147144995164127,
#            -0.0004667425580555573, -0.03500249912205618, -0.02921883626258932, 0.07437000475008972,
#            -0.08972592541307677, -0.278478710136842, 0.17771107251755894, 0.13963137297658249, -0.09806235486234073,
#            0.2250216169701889, 0.004012143041472882, -0.09557053294032812, -0.07825231843627989, -0.016884643267840147,
#            -0.07446355580352247, -0.2593223954923451, 0.3167566105537116, -0.1457909119618125, -0.19490755932056344,
#            -0.027154209732543677, -0.052847609906457364, -0.04406707959016785, -0.12769893463118934,
#            0.03398580197710544, -0.0649230542758596, 0.0631581172265578, -0.25887035638093947, -0.013910979232750833,
#            0.02969641001021955, 0.048437727801501754, -0.014546974645927548, 0.07877976108633447, 0.05024458586703986,
#            0.11588065101765097, 0.20645466508547541, 0.21020315198227763, -0.0055749696283601225, -0.3162370246462524,
#            -0.04343375195283443, 0.16891142137465068, -0.13932878642925062, -0.11708662887103856, 0.005635970403673128,
#            0.14869307507411578, 0.041947758985916156, -0.04424683906836435, -0.0404190760711208, -0.10970234530745074,
#            -0.11172063216450624, -0.058651520577259364, 0.19431356606073677, 0.1269311320083216, -0.08463340376736596,
#            -0.03388741540722549, 0.15248170197010041, 0.027585286480607464, -0.16349083660636096, 0.14774509760551155,
#            -0.32782237785169854, 0.10565179306198842, 0.13771146617771593, -0.12816797761712223, -0.018764491938054562,
#            0.03492144131625537, -0.11515498196706175, 0.0596710146847181, -0.039062334955669936, 0.21859635678119957,
#            0.11628108082804829, -0.10700459591811523, 0.033867743264709135, 0.17128340468741954, 0.08141454989672639,
#            -0.001826310115866363, 0.09521348401671276, -0.015111713451333345, -0.0887389195105061, -0.15221852611051873,
#            0.08309945185203105, 0.08956746823649155, 0.11707902904367075, 0.024592045371682615, -0.037700746519840324,
#            0.06767876122350572, -0.020213128487812357, -0.03641606221906841, 0.003265181382303126, 0.07741490107262507,
#            -0.1375643080496229, 0.04282059690449387, -0.03293223386630416, 0.004753618957329309, -0.05660321190676768,
#            -0.07076106734770292, 0.03658419543644413, 0.2137074063459295]
#
# print(len(w2v_oov))


